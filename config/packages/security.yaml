security:
    # Registering the user & hashing passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'

    # Loading the user - the user provider
    providers:
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        main:
            lazy: true
            provider: app_user_provider
            custom_authenticator: App\Security\UsersAuthenticator
            logout:
                path: app_logout
                # where to redirect after logout
                # target: app_any_route (make sure this line is properly commented out or removed if not in use)

            remember_me:
                secret: '%kernel.secret%'
                lifetime: 604800  # 1 week in seconds
                path: /
                always_remember_me: true

    role_hierarchy:
        ROLE_ADMIN: [ROLE_USER]
        ROLE_EMPLOYEE: [ROLE_USER]

    # Easy way to control access for large sections of your site
    access_control:
         - { path: ^/admin, roles: ROLE_ADMIN }
         - { path: ^/account, roles: ROLE_USER }

when@test:
    security:
        password_hashers:
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4  # Lowest possible value for bcrypt
                time_cost: 3  # Lowest possible value for argon2
                memory_cost: 10  # Lowest possible value for argon2